python:
x.rstrip()		去除开头句尾空格

DLR--前序遍历（中左右）（根在前，从左往右，一棵树的根永远在左子树前面，左子树又永远在右子树前面 ）
LDR--中序遍历（左中右）（根在中，从左往右，一棵树的左子树永远在根前面，根永远在右子树前面）
LRD--后序遍历（左右中）（根在后，从左往右，一棵树的左子树永远在右子树前面，右子树永远在根前面）


a ^ a = 0
a ^ b = b ^ a
所以：a ^ b ^ a = a ^ a ^ b = b


str -> ascii:	ord('A') = 65
ascii -> str:	chr(65) = 'A'

bin(10) = '0b1010' 
.zfill 字符串前置补零
.count("1") 字符串计数


set() 函数创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。
交集 & : x&y，返回一个新的集合，包括同时在集合 x 和y中的共同元素。
并集 | : x|y，返回一个新的集合，包括集合 x 和 y 中所有元素。
差集 - : x-y，返回一个新的集合,包括在集合 x 中但不在集合 y 中的元素。
补集 ^ : x^y，返回一个新的集合，包括集合 x 和 y 的非共同元素。
how to get idx in set? use for loops::
for i in set(a): print(i);print(a.count(i))


str2=''.join(tlist) # list->str

重复子字符串：return s in (s+s)[1:-1]，复制一倍

for i in zip(a,b): print(i) >>>>>> (1,a),(2,b)
>>>> dict(zip(a,b)) >>>>>{1:a, 2:b}

L1=L是把L所指的对象绑定到名字L1上，
L2=L[:]则是把L通过切片运算取得的新列表对象绑定到L2上。
前者两个名字指向同一个对象，后者两个名字指向不同对象。换句话说，L1和L是指的同一个东西，那么修改L1也就修改了L；L2则是不同的东西，修改L2不会改变L
